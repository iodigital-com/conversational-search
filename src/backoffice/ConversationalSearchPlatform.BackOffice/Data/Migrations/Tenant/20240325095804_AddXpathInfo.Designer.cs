// <auto-generated />
using ConversationalSearchPlatform.BackOffice.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConversationalSearchPlatform.BackOffice.Data.Migrations.Tenant
{
    [DbContext(typeof(Data.TenantDbContext))]
    [Migration("20240325095804_AddXpathInfo")]
    partial class AddXpathInfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConversationalSearchPlatform.BackOffice.Tenants.ApplicationTenantInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("AmountOfSearchReferences")
                        .HasColumnType("int");

                    b.Property<string>("BasePrompt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChatModel")
                        .HasColumnType("int");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromptTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XPathForSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique()
                        .HasFilter("[Identifier] IS NOT NULL");

                    b.ToTable("TenantInfo");

                    b.HasData(
                        new
                        {
                            Id = "270AFA90-DF18-4FB2-AC10-CFD31E79B238",
                            AmountOfSearchReferences = 5,
                            ChatModel = 0,
                            Identifier = "DEFAULT",
                            Name = "DEFAULT",
                            XPathForSite = ""
                        },
                        new
                        {
                            Id = "D2FA78CE-3185-458E-964F-8FD0052B4330",
                            AmountOfSearchReferences = 8,
                            ChatModel = 402,
                            Identifier = "TenaProfessionals",
                            Name = "TenaProfessionals",
                            XPathForSite = ""
                        },
                        new
                        {
                            Id = "CCFA9314-ABE6-403A-9E21-2B31D95A5258",
                            AmountOfSearchReferences = 8,
                            ChatModel = 402,
                            Identifier = "iodigital",
                            Name = "iODigital",
                            XPathForSite = ""
                        },
                        new
                        {
                            Id = "4903E29F-D633-4A4C-9065-FE3DD8F27E40",
                            AmountOfSearchReferences = 8,
                            ChatModel = 350,
                            Identifier = "iodigitalDemo",
                            Name = "iODigitalDemo",
                            XPathForSite = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
