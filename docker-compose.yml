version: '3.9'

services:
  csp-db-amd64:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: csp-db
    ports:
      - "1450:1433"
    volumes:
      - ./sql:/var/lib/mssqlql/data
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=CSP_PW_1450!

  csp-db-arm:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: csp-db
    cap_add: [ 'SYS_PTRACE' ]
    ports:
      - "1450:1433"
    volumes:
      - ./sql:/var/opt/mssql
    environment:
      - ACCEPT_EULA=Y
      - "MSSQL_SA_PASSWORD=CSP_PW_1450!"

  unstructured:
    ports:
      - '8200:8000'
    container_name: csp-unstructured-api
    image: 'downloads.unstructured.io/unstructured-io/unstructured-api:0.0.53'
  
  weaviate:
    image: semitechnologies/weaviate:1.21.7
    container_name: csp-weaviate
    restart: on-failure
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 20
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: "./data"
      DEFAULT_VECTORIZER_MODULE: text2vec-transformers
      ENABLE_MODULES: 'text2vec-transformers,multi2vec-clip'
      TRANSFORMERS_INFERENCE_API: http://t2v-transformers:8080
      CLIP_INFERENCE_API: 'http://multi2vec-clip:8080'
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - ./data/weaviate:/var/lib/weaviate
  t2v-transformers:
    image: semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
    container_name: csp-weaviate-t2v
    environment:
      ENABLE_CUDA: 0
  multi2vec-clip:
    image: semitechnologies/multi2vec-clip:sentence-transformers-clip-ViT-B-32-multilingual-v1
    container_name: csp-weaviate-clip
    environment:
      ENABLE_CUDA: '0'
  
  scraper:
    container_name: csp-scraper
    build:
      context: ./src/scraper/ConversationalSearchPlatform.Scraper
      dockerfile: Dockerfile
    ports:
      - "8060:8060"
    restart: always
  
  scraper-arm:
    container_name: csp-scraper
    environment:
      ARCH: 'arm64'
      TARGETPLATFORM: 'linux/arm64'
    build:
      context: ./src/scraper/ConversationalSearchPlatform.Scraper
      args:
        ARCH: 'arm64'
        TARGETPLATFORM: 'linux/arm64'
      dockerfile: Dockerfile
    ports:
      - "8060:8060"
    restart: always
  
  application:
    container_name: csp-app
    build:
      context: ./src/backoffice
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"
  
  azurite:
    ports:
      - "10000:10000"
    image: mcr.microsoft.com/azure-storage/azurite
    command: azurite-blob --blobHost 0.0.0.0 --blobPort 10000